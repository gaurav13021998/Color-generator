{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","Values","all","list","setList","error","setError","onSubmit","e","preventDefault","colors","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICuBvDC,EA1BK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAsB,KAAfC,SACdC,oBAAS,IADoB,mBAChDC,EADgD,KACzCC,EADyC,KAEjDC,EAAMP,EAAIQ,KAAK,KAEfhB,EAAMG,EAAQ,WAAR,cAAYK,IAQxB,OAPAS,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBL,GAAS,KACT,KACF,OAAO,kBAAMM,aAAaF,MAC1B,CAACL,IAGD,6BAASQ,UAAS,gBAAWX,EAAQ,IAAM,eAC1CY,MAAO,CAACC,gBAAgB,OAAD,OAASR,EAAT,MACvBS,QAAS,WACPV,GAAS,GACTW,UAAUC,UAAUC,UAAU3B,KAE9B,uBAAGqB,UAAU,iBAAiBZ,EAA9B,KACA,uBAAGY,UAAU,eAAerB,GAC3Ba,GAAS,uBAAGQ,UAAU,SAAb,yB,gBCkBFO,MArCf,WAAgB,IAAD,EACahB,mBAAS,IADtB,mBACNiB,EADM,KACCC,EADD,OAEUlB,mBAAS,IAAImB,IAAO,WAAWC,IAAI,KAF7C,mBAENC,EAFM,KAEAC,EAFA,OAGYtB,oBAAS,GAHrB,mBAGNuB,EAHM,KAGCC,EAHD,KAgBb,OAAO,oCACN,6BAASf,UAAU,aACjB,+CACA,0BAAMgB,SAdY,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIT,IAAOF,GAAOG,IAAI,IACnCE,EAAQM,GACT,MAAML,GACLC,GAAS,MASR,2BAAOK,KAAK,OAAOC,MAAOb,EACzBc,SAAU,SAACL,GAAD,OAAOR,EAASQ,EAAEM,OAAOF,QAClCG,YAAY,UACZxB,UAAS,UAAKc,EAAQ,QAAU,QAClC,4BAAQM,KAAK,SAASpB,UAAU,OAAhC,cAGJ,6BAASA,UAAU,UAChBY,EAAKa,KAAI,SAACjB,EAAMnB,GACf,OACE,kBAAC,EAAD,eAAaqC,IAAKrC,GAAWmB,EAA7B,CAAoCnB,MAAOA,WC9BpDsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.73d58deb.chunk.js","sourcesContent":["function componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? '0' + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport default rgbToHex;\r\n","import React, { useState, useEffect } from 'react'\r\nimport rgbToHex from './utils';\r\n\r\nconst SingleColor = ({rgb, weight, index, hexColor }) => {\r\n  const [alert, setAlert] = useState(false)\r\n  const bcg = rgb.join(',');\r\n\r\n  const hex = rgbToHex(...rgb)\r\n  useEffect(() =>{\r\n    const timeout = setTimeout(()=> {\r\n      setAlert(false)\r\n    },3000)\r\n    return () => clearTimeout(timeout);\r\n  },[alert]);\r\n\r\n  return (\r\n    <article className={`color ${index > 10 && 'color-light'}`}\r\n     style={{backgroundColor: `rgb(${bcg})`}} \r\n     onClick={() =>{\r\n       setAlert(true)\r\n       navigator.clipboard.writeText(hex)\r\n     } }>\r\n       <p className='percent-value'>{weight}%</p>\r\n       <p className='color-value'>{hex}</p>\r\n       {alert && <p className='alert'>copied to clipboard</p>}\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default SingleColor;\r\n","import React, { useState } from 'react'\r\nimport SingleColor from './SingleColor'\r\n\r\nimport Values from 'values.js'\r\n\r\nfunction App() {\r\n  const [color, setColor] = useState('');\r\n  const [list, setList] =useState(new Values('#f25015').all(10));\r\n  const [error, setError] =useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try{\r\n      let colors = new Values(color).all(10);\r\n      setList(colors);\r\n    }catch(error){\r\n      setError(true);\r\n    }\r\n    \r\n  }\r\n\r\n  return <>\r\n   <section className='container'>\r\n     <h3>Color generator</h3>\r\n     <form onSubmit={handleSubmit}>\r\n       <input type='text' value={color}\r\n        onChange={(e) => setColor(e.target.value)}\r\n         placeholder='#f25015'\r\n         className={`${error ? 'error' : null}`}></input>\r\n       <button type='submit' className='btn'>Generate</button>\r\n      </form>   \r\n   </section>\r\n   <section className='colors'>\r\n     {list.map((color,index) => {\r\n       return(\r\n         <SingleColor key={index} {...color} index={index} />\r\n       )\r\n     })}\r\n  </section>\r\n  </>\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}